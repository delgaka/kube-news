# version: "3.8"

services:
  postgre:
    image: postgres:${POSTGRE_TAG}
    container_name: postgre
    ports:
      - "5432:5432"
    # profile é uma feature do docker-compose que permite definir variáveis de ambiente de acordo com o profile.
    # para usar profiles, é necessário usar o parâmetro --profile no comando docker-compose.
    # profiles:
    #   - dev
    #   - hml
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgre_docker_vol:/var/lib/postgresql/data #docker volume
      # - /Users/delgaka/Dev/devopspro/kube-news/postgre_vol:/var/lib/postgresql/data #bind mount
    networks:
      - kube_news_net

# # include tem que ser no mesmo nível que o services.  
# include:  
# - ./kube-news.compose.yaml

  # Declaração de serviço
  kube_news:
    image: delgaka/kube-news:${KUBE_NEWS_TAG:-latest} # define imagem padrão latest quando não há tag definida na variável.
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: kube_news
    ports:
      - "8080:8080"
    networks:
      - kube_news_net
    depends_on:
      - postgre
    environment:
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_DATABASE: ${POSTGRES_DB}
      DB_HOST: postgre
  
  # # extends mode
  # web:
  #   extends:
  #     file: ./kube-news.compose.yaml
  #     service: kube_news
  #   # image: delgaka/kube-news:${KUBE_NEWS_TAG:-latest} # sobrescreve a imagem do kube-news.compose.yaml

volumes:
  postgre_docker_vol:
    name: postgre_docker_vol
    # external: true # usado quando o vol é criado externamente.

networks:
  kube_news_net:
    name: kube_news_net
    driver: bridge